@model LoanEMICalculator.Entities.Models.LoanCriteriaModel

@{
    ViewBag.Title = "Index";
}
@using (Html.BeginForm("", "",
FormMethod.Post, new { id = "frmLoanDetails" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h2>Loan EMI Calculator</h2>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div id="errMSG" style="color:red;"></div>
        <div class="form-group">
            @Html.LabelFor(model => model.LoanAmount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LoanAmount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LoanAmount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LoanInterest, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LoanInterest, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LoanInterest, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NoOfYears, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NoOfYears, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NoOfYears, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MonthlyInterest, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MonthlyInterest, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EMI, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EMI, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" value="Calculate" id="btnCalculate" class="btn btn-default" />
                <input type="button" value="Store to Database" id="btnStoreDB" class="btn btn-default" style="display:none" />
            </div>
        </div>

    </div>
    <div id="container"></div>
    <script type="text/javascript">
            $("#LoanInterest").blur(function () {
                var loanInterest = $("#LoanInterest").val();
                FillEMIValue();
                if (loanInterest != '' || loanInterest != undefined || loanInterest > 0) {
                    var url = '@Url.Action("GetMonthlyInterest")';
                    $.get(url, { loanInterest: loanInterest}, function (data) {
                        $("#MonthlyInterest").val(data);
                    });
                }
                else
                    $("#MonthlyInterest").val('');
            });

            $("#LoanAmount").blur(function () {
                FillEMIValue();
            });

            $("#NoOfYears").blur(function () {
                FillEMIValue();
            });

            function FillEMIValue() {
                var hasValidValues = true;
                var loanInterest = $("#LoanInterest").val();
                if (loanInterest == '' || loanInterest == undefined) {
                    hasValidValues = false; return;
                }

                var loanAmount = $("#LoanAmount").val();
                if (loanAmount == '' || loanAmount == undefined) {
                    hasValidValues = false; return;
                }

                var noOfYears = $("#NoOfYears").val();
                if (noOfYears == '' || noOfYears == undefined) {
                    hasValidValues = false; return;
                }

                if (hasValidValues) {
                    var url = '@Url.Action("GetEMIValue")';
                    $.get(url, { loanAmount: loanAmount, loanInterest: loanInterest, noOfYears: noOfYears }, function (data) {
                        $("#EMI").val(data);
                    });
                }
            }
        $("#btnCalculate").click(function () {
            $('#errMSG').html("");
            var isValid = $('#frmLoanDetails').valid();
            if (isValid) {
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("CalculateEMI")',
                    cache: false,
                    dataType: 'html',
                    data: $('#frmLoanDetails').serialize(),
                }).done(function (result) {

                    $('#container').html(result);
                    $("#btnStoreDB").css("display", "block");
                });

            }
        });
            $("#btnStoreDB").click(function () {
                $('#errMSG').html("");
            var isValid = $('#frmLoanDetails').valid();
                if (isValid) {
                //check loan details already exists in db or not.
                    var url = '@Url.Action("CheckLoanDetailsExists")';  
                    $.get(url, { loanAmount: $("#LoanAmount").val(), loanInterest: $("#LoanInterest").val(), noOfYears: $("#NoOfYears").val() }, function (data) {
                        if (data == "Exists") {
                            $('#errMSG').html("Data already exists...!!!");
                        }
                        else {
                            StoreEMITransaction();
                        }
                    });  
            }
            });
        function StoreEMITransaction() {
            $('#errMSG').html("");
             $.ajax({
                    type: "POST",
                    url: '@Url.Action("StoreEMI")',
                    data: $('#frmLoanDetails').serialize(),
                    success: function (data, textStatus, XMLHttpRequest) {
                        if (data.Result == "OK")
                        {
                            $('#container').html(data.EMITransaction);
                            alert('Data Inserted Successfully');
                        }
                        $("#btnStoreDB").css("display", "block");
                    },
                    error: function (jqXHR, exception) {
                        alert(exception);
                    }
                })
        }
    </script>
}

